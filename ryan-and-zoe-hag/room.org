* Ryan & Zoe Hag Escape Room
** Flow
#+begin_src mermaid :file flow.svg
graph TD
    classDef hidden stroke-dasharray: 5 5

    subgraph legend[Legend]
        legend-physical>Physical object]
        legend-hidden>Hidden object]:::hidden
        legend-information(Information)
        legend-action{{Action}}
    end

    toolbox>Black and yellow toolbox] --> open-toolbox{{Open the toolbox}} --> map-with-blackhorse-road & string-green
    black-lock>Black code lock] --> unlock-black-lock{{Unlock the black combination lock}} --> open-toolbox
    black-code(Black code) --> unlock-black-lock
    toolbox -- in unlocked compartment --> piece-4-half-b>White Rook ?1] --> piece-4

    lockbox>Black metal lockbox]:::hidden --> unlock-lockbox{{Unlock black metal lockbox with key}} -- under cash insert --> caesar-1-letter
    lockbox-key>Key to black metal lockbox]:::hidden --> unlock-lockbox -- on top --> iphone-security-memo
    unlock-lockbox -- in cash drawer --> chesspiece & string-blue

    suitcase>Small brown suitcase] & suitcase-code(451) --> unlock-suitcase{{Unlock the suitcase}} --> android & spot>Spot the dog] & caesar-2-letter

    piece-1("♞ D4") --> chess
    piece-2("♛ D6") --> chess
    piece-3("♙ G2") --> chess
    piece-4("♖ F1") --> chess
    piece-5("♔ G1") --> chess
    chess{{Solve mate in 3, black to move}} --> chess-code(E2 H1 H2 H2 H5)

    chessboard>Chess board] & preplaced-chesspieces>Preplaced chesspieces] & chess-notes>Chess puzzle notes] --> chess

    chesspiece>Tagged chesspiece] --> piece-2

    iphone>Locked iPhone]:::hidden --> unlock-iphone{{Unlock iPhone}} --> iphone-wallpaper>iPhone porn wallpaper with G2 superimposed] --> piece-3
    iphone-unlock-code(iPhone unlock code) --> unlock-iphone
    iphone-security-memo>iPhone security policy memo] --> deduce-iphone-code{{Logically deduce unlock code}} --> iphone-unlock-code

    android>Locked, occasionally ringing, Android phone] --> unlock-android{{Unlock Android phone}} --> piece-4-half-a>White Rook F?] --> piece-4
    mirrored-tape-pattern>Tape pattern in mirror] --> android-unlock-pattern(Android unlock pattern) --> unlock-android    
    android -- in back of phone case --> string-orange

    codewheel>Caesar 1 codewheel]:::hidden --> caesar-1-key(Caesar 1 key) --> decode-caesar-1{{Decode Caesar 1}}
    caesar-1-letter>Crumpled coded letter]:::hidden --> caesar-1-ciphertext(Caesar 1 ciphertext) --> decode-caesar-1 --> suitcase-code

    caesar-2-letter>Another crumpled coded letter] --> decode-caesar-2{{Decode Caesar 2 with known plaintext}} --> piece-5

    cat-paintings>Cat paintings] --> order-cats-by-age{{Order cats by age}} --> black-code
    cat-clue-1>Cat clue 1] --> order-cats-by-age
    cat-clue-2>Cat clue 2]:::hidden --> order-cats-by-age
    cat-clue-3>Cat clue 3]:::hidden --> order-cats-by-age
    cat-clue-4>Cat clue 4]:::hidden --> order-cats-by-age
    cat-clue-5>Cat clue 5]:::hidden --> order-cats-by-age
    cat-clue-6>Cat clue 6]:::hidden --> order-cats-by-age

    map-with-blackhorse-road>Blackhorse Road Triangulation Map with D4 on reverse] --> triangulate-blackhorse-road{{Triangulate Blackhorse Road}} --> piece-1
    string-green>Green string] --> triangulate-blackhorse-road    
    string-blue>Blue string]:::hidden --> triangulate-blackhorse-road
    string-orange>Red string]:::hidden --> triangulate-blackhorse-road
#+end_src

#+RESULTS:
[[file:flow.svg]]

** Puzzles
*** Chess
*** Simultaneous equations
*** Cat deduction
**** Clues
1. All the cats are different ages. Take the ages of the youngest three cats in order and unlock the black padlock with them.
2. Any cat wearing something blue is older than a cat not wearing blue.
3. One of the ginger cats is twice the age of the other.
4. The cats in hats are oldest, with a combined age of 27.
5. The cat in the ruff is 11.
6. The cat in the green bowtie is the youngest. His age is divisible by 3.
**** Prolog check
#+begin_src prolog :session :goal age([PughI, PughII, BarneyMcGrew, Cuthbert, Dibble, Grub])
:- use_module(library(clpfd)).

age(Vars) :-
    Vars = [PughI, PughII, BarneyMcGrew, Cuthbert, Dibble, Grub],
    (PughI #> 0, PughII #> 0, BarneyMcGrew #> 0, Cuthbert #> 0, Dibble #> 0, Grub #> 0),
    all_different(Vars),
    
    (PughII #< PughI, PughII #< Cuthbert, PughII #< Grub),
    (BarneyMcGrew #< PughI, BarneyMcGrew #< Cuthbert, BarneyMcGrew #< Grub),
    (Dibble #< PughI, Dibble #< Cuthbert, Dibble #< Grub),

    ((PughI #= 2 * PughII); (PughII #= 2 * PughI)),

    (Cuthbert #> PughI, Cuthbert #> PughII, Cuthbert #> BarneyMcGrew, Cuthbert #> Dibble),
    (Grub #> PughI, Grub #> PughII, Grub #> BarneyMcGrew, Grub #> Dibble),
    (Cuthbert + Grub #= 27),

    (Dibble is 11),

    (BarneyMcGrew #< PughI, BarneyMcGrew #< PughII, BarneyMcGrew #< Cuthbert, BarneyMcGrew #< Dibble, BarneyMcGrew #< Grub),
    (0 #= mod(BarneyMcGrew, 3)).
#+end_src

#+RESULTS:
| PughI              | =  | 12,     |           |     |         |
| PughII             | =  | 6,      |           |     |         |
| BarneyMcGrew       | =  | 3,      |           |     |         |
| Dibble             | =  | 11,     |           |     |         |
| Cuthbert           | in | 13..14, |           |     |         |
| all_different([12, | 6, | 3,      | Cuthbert, | 11, | Grub]), |
| Cuthbert+Grub#=27, |    |         |           |     |         |
| Grub               | in | 13..14. |           |     |         |

*** Password logic
**** Password policy memo
TO ALL EMPLOYEES

It has been brought to our attention that many employees have been using insecure PINs for their company iPhones. Therefore, we have implemented the following password policy:

1. The first and last digits must be equal.
2. No digit shall be less than the digit before it.
3. Zero is the least secure of all numbers. No password shall contain it.
4. The product of the first two digits shall be equal to the sum of the other digits.
**** Prolog check
#+begin_src prolog :session :goal passcode(Vars)
:- use_module(library(clpfd)).

passcode(Numbers) :-
    Numbers = [A, B, C, D, E, F],
    (F + 1 #> E, E + 1 #> D, D + 1 #> C, C + 1 #> B, B + 1 #> A),
    (A #> 0, A #<10),
    (A #= F),
    (A * B #= C + D + E + F),
    C = 4.
#+end_src

#+RESULTS:
| Vars = [4 | 4 | 4 | 4 | 4 | 4]. |

*** Caesar 1
**** Plaintext
23-12-1967

SEASONS GREETINGS.

I AM AFRAID THERE HAS BEEN A MIX-UP WITH OUR LUGGAGE. THE CODE FOR MINE IS FOUR FIVE ONE. PLEASE FEED SPOT OR CHRISTMAS IS RUINED. THANKS.
**** Key
+21
| ABCDEFGHIJKLMNOPQRSTUVWXYZ |
|----------------------------|
| VWXYZABCDEFGHIJKLMNOPQRSTU |
**** Ciphertext
23-12-1967

NZVNJIN BMZZODIBN.

D VH VAMVDY OCZMZ CVN WZZI V HDS-PK RDOC JPM GPBBVBZ. OCZ XJYZ AJM HDIZ DN AJPM ADQZ JIZ. KGZVNZ AZZY NKJO JM XCMDNOHVN DN MPDIZY. OCVIFN.
*** Caesar 2
**** Plaintext
1-1-1968

HAPPY NEW YEAR!!!

PLEASE ACCEPT MY APOLOGIES FOR DISTURBING YOUR CHESS GAME ON THE WAY OUT. IF YOU EVER FIND THE WHITE KING THEN HE SHOULD BE ON GOLF ONE. LOOKS LIKE MATE IN THREE WITH BLACK TO MOVE. GOOD LUCK!
**** Key
+11
| ABCDEFGHIJKLMNOPQRSTUVWXYZ |
|----------------------------|
| LMNOPQRSTUVWXYZABCDEFGHIJK |
**** Ciphertext
1-1-1968

SLAAJ YPH JPLC!!!

AWPLDP LNNPAE XJ LAZWZRTPD QZC OTDEFCMTYR JZFC NSPDD RLXP ZY ESP HLJ ZFE. TQ JZF PGPC QTYO ESP HSTEP VTYR ESPY SP DSZFWO MP ZY RZWQ ZYP. WZZVD WTVP XLEP TY ESCPP HTES MWLNV EZ XZGP. RZZO WFNV!
*** Android
**** Password
#+begin_export ascii
/ _
\|
#+end_export
